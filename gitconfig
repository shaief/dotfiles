[core]
	excludesfile = ~/.gitignore
	editor = vim
[push]
	default = matching
[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = true
	pager = true
[color "branch"]
	current = red
	local = yellow
	remote = green
[color "diff"]
	meta = yellow
	frag = magenta
	old = red
	new = green
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[alias]
	lgo = ! git --no-pager log --oneline --graph -n 18 --decorate
	lg = log --graph --abbrev-commit --decorate --format=tformat:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
	ll = log --pretty=\"tformat:%Cred%h%Creset - [%ad] %C(yellow)%d%Creset %s %C(bold blue)<%an>%Creset\" --abbrev-commit --date=short
	d = diff
	dc = diff --cached
	lgr = log --pretty=\"tformat:%Cred%h%Creset - [%ad] %C(yellow)%d%Creset %s %C(bold blue)<%an>%Creset\" --abbrev-commit --date=short --grep
	gb = "!f() { \t\t\t\tgit grep -n $1 | while IFS=: read i j k; do git --no-pager blame -L $j,$j $i; done        }; f"
	glg = "! if [ $# -eq 1 ]; then         git ll --grep $1     else         git ll $1 --grep $2 \tfi"
	save = !git add -A && git commit -m 'SAVEPOINT'
	wip = commit -amWIP
	undo = reset HEAD~1 --mixed
	amend = commit --amend
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
	wdiff = diff --word-diff=color --unified=1
    release = !git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%s"
    pushup = !git push origin $(git branch --show-current)
